#+TITLE: README for Vagrant dev linux box
#+AUTHOR:   Roman Shestakov
#+LANGUAGE: en

* Description

A Vagrant VM provisioned with ansible. This VM uses standard Debian
precise64 box. It could be used as a base box for certain dev projects
as it has provisioning for some basic development tools, such as emacs, tmux, etc.

* On startup the VM runs the ansible provision to install
- essential build tools.
- erlang
- python
- emacs ver. 24.4 built from sources
- dotfiles (https://github.com/RomanShestakov/dotfiles.git)
- emacs.d from https://github.com/RomanShestakov/.emacs.d.git

* Ansible setup
The directory layout and some of the setup scripts are used from : https://github.com/enginyoyen/ansible-best-practises/
** The playbook makes use of external roles loaded from Ansible Galaxy
./provision/ansible/playbooks/roles/roles_requirements.yml allows to
specify which external roles should be downloaded before playbook is executed.

The external roles are installed with the script
./provision/ansible/playbooks/extensions/setup/role_update.sh which is
executed by Vagrantfile

* iterm2 defaults
iterm2 is a excellent terminal client for OSX but it requires changes
to the profile to make key shortcuts work correctly for emacs.  The
file with profiles defaults is stored in provision/iterm2_prefs and
could be restored with Iterm2 in Preferences -> Load Preferences from
a custom folder or URL
* Dotfiles
this configuration uses a fork of excellent collection of dotfiles -
scripts used to customize linux env
(https://github.com/mathiasbynens/dotfiles) .bash_profile is used
during login and it sources .bashrc .bashrc is read everytime a new
shell is started. This is a good place to add custom settings and it
also sources .path, .bash_prompt, .exports, .aliases, .functions,
.extra.
[[http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html][Here]] is the good explanation of bash login scripts

* How to create a base box
https://scotch.io/tutorials/how-to-create-a-vagrant-base-box-from-an-existing-one

- check vm from github and provision it
#+BEGIN_SRC
git clone https://github.com/RomanShestakov/vm.git
cd vm
vagrant up
#+END_SRC

- package newly provisioned box into a new base box
#+BEGIN_SRC
# package the VM into a new vagrant box.
# this will create vm.box file in the vm dir
vagrant package --output vm.box
# add the new box into Vagrant install into ~/.vagrant.d/boxes on the local host
# make sure vm.box file is removed from vm dir
vagrant box add vmbox vm.box --force
# now the vagrant config file which want to use this box on the local host
# should have a reference to it:
config.vm.box = "vmbox"
#+END_SRC

- init new Vagrant box:
#+BEGIN_SRC
# this will create a Vagrantfile in the current dir:
vagrant init vmbox
#+END_SRC
* Conda
* Packer
Packer allows to build a vm image which could be used with most of the
cloud providers and also with Vagrant.

#+BEGIN_SRC
# build ubuntu image:
packer build --only=virtualbox-iso provision/ubuntu.json
# copy created box to vagrant
vagrant box add virtualbox-ubuntu1404 builds/virtualbox-ubuntu1404.box --force
#+END_SRC

#+BEGIN_SRC
# build centos7 image:
packer build --only=virtualbox-iso provision/centos7.json
# copy created box to vagrant
vagrant box add virtualbox-centos7 builds/virtualbox-centos7.box --force
# startup vagrant
vagrant up
#+END_SRC

* Some issues
** 'vagrant up' fails with 'mount: unknown filesystem type 'vboxsf''
to fix:
#+BEGIN_SRC
vagrant plugin install vagrant-vbguest
#+END_SRC
* Some References
http://www.jeffgeerling.com/blog/server-vm-images-ansible-and-packer
https://github.com/geerlingguy/packer-ubuntu-1404
https://featheredtoast.wordpress.com/2013/10/14/vagrant-packer-ansible-arch-linux-virtualization-made-in-heaven/
http://elasticdog.com/2013/08/developing-ansible-playbooks-for-arch-linux-with-vagrant/
http://superuser.com/questions/745881/how-to-authenticate-to-a-vm-using-vagrant-up
https://blog.engineyard.com/2014/building-a-vagrant-box
https://techpunch.co.uk/development/high-availability-image-deployments-in-aws-using-ansible-and-packer
